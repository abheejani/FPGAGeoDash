--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=31 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_ok9
( 
	data[4..0]	:	input;
	eq[30..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[30..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode566w[2..0]	: WIRE;
	w_anode580w[3..0]	: WIRE;
	w_anode597w[3..0]	: WIRE;
	w_anode607w[3..0]	: WIRE;
	w_anode617w[3..0]	: WIRE;
	w_anode627w[3..0]	: WIRE;
	w_anode637w[3..0]	: WIRE;
	w_anode647w[3..0]	: WIRE;
	w_anode657w[3..0]	: WIRE;
	w_anode669w[2..0]	: WIRE;
	w_anode679w[3..0]	: WIRE;
	w_anode690w[3..0]	: WIRE;
	w_anode700w[3..0]	: WIRE;
	w_anode710w[3..0]	: WIRE;
	w_anode720w[3..0]	: WIRE;
	w_anode730w[3..0]	: WIRE;
	w_anode740w[3..0]	: WIRE;
	w_anode750w[3..0]	: WIRE;
	w_anode761w[2..0]	: WIRE;
	w_anode771w[3..0]	: WIRE;
	w_anode782w[3..0]	: WIRE;
	w_anode792w[3..0]	: WIRE;
	w_anode802w[3..0]	: WIRE;
	w_anode812w[3..0]	: WIRE;
	w_anode822w[3..0]	: WIRE;
	w_anode832w[3..0]	: WIRE;
	w_anode842w[3..0]	: WIRE;
	w_anode853w[2..0]	: WIRE;
	w_anode863w[3..0]	: WIRE;
	w_anode874w[3..0]	: WIRE;
	w_anode884w[3..0]	: WIRE;
	w_anode894w[3..0]	: WIRE;
	w_anode904w[3..0]	: WIRE;
	w_anode914w[3..0]	: WIRE;
	w_anode924w[3..0]	: WIRE;
	w_anode934w[3..0]	: WIRE;
	w_data564w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[30..0] = eq_wire[30..0];
	eq_wire[] = ( ( w_anode934w[3..3], w_anode924w[3..3], w_anode914w[3..3], w_anode904w[3..3], w_anode894w[3..3], w_anode884w[3..3], w_anode874w[3..3], w_anode863w[3..3]), ( w_anode842w[3..3], w_anode832w[3..3], w_anode822w[3..3], w_anode812w[3..3], w_anode802w[3..3], w_anode792w[3..3], w_anode782w[3..3], w_anode771w[3..3]), ( w_anode750w[3..3], w_anode740w[3..3], w_anode730w[3..3], w_anode720w[3..3], w_anode710w[3..3], w_anode700w[3..3], w_anode690w[3..3], w_anode679w[3..3]), ( w_anode657w[3..3], w_anode647w[3..3], w_anode637w[3..3], w_anode627w[3..3], w_anode617w[3..3], w_anode607w[3..3], w_anode597w[3..3], w_anode580w[3..3]));
	w_anode566w[] = ( (w_anode566w[1..1] & (! data_wire[4..4])), (w_anode566w[0..0] & (! data_wire[3..3])), B"1");
	w_anode580w[] = ( (w_anode580w[2..2] & (! w_data564w[2..2])), (w_anode580w[1..1] & (! w_data564w[1..1])), (w_anode580w[0..0] & (! w_data564w[0..0])), w_anode566w[2..2]);
	w_anode597w[] = ( (w_anode597w[2..2] & (! w_data564w[2..2])), (w_anode597w[1..1] & (! w_data564w[1..1])), (w_anode597w[0..0] & w_data564w[0..0]), w_anode566w[2..2]);
	w_anode607w[] = ( (w_anode607w[2..2] & (! w_data564w[2..2])), (w_anode607w[1..1] & w_data564w[1..1]), (w_anode607w[0..0] & (! w_data564w[0..0])), w_anode566w[2..2]);
	w_anode617w[] = ( (w_anode617w[2..2] & (! w_data564w[2..2])), (w_anode617w[1..1] & w_data564w[1..1]), (w_anode617w[0..0] & w_data564w[0..0]), w_anode566w[2..2]);
	w_anode627w[] = ( (w_anode627w[2..2] & w_data564w[2..2]), (w_anode627w[1..1] & (! w_data564w[1..1])), (w_anode627w[0..0] & (! w_data564w[0..0])), w_anode566w[2..2]);
	w_anode637w[] = ( (w_anode637w[2..2] & w_data564w[2..2]), (w_anode637w[1..1] & (! w_data564w[1..1])), (w_anode637w[0..0] & w_data564w[0..0]), w_anode566w[2..2]);
	w_anode647w[] = ( (w_anode647w[2..2] & w_data564w[2..2]), (w_anode647w[1..1] & w_data564w[1..1]), (w_anode647w[0..0] & (! w_data564w[0..0])), w_anode566w[2..2]);
	w_anode657w[] = ( (w_anode657w[2..2] & w_data564w[2..2]), (w_anode657w[1..1] & w_data564w[1..1]), (w_anode657w[0..0] & w_data564w[0..0]), w_anode566w[2..2]);
	w_anode669w[] = ( (w_anode669w[1..1] & (! data_wire[4..4])), (w_anode669w[0..0] & data_wire[3..3]), B"1");
	w_anode679w[] = ( (w_anode679w[2..2] & (! w_data564w[2..2])), (w_anode679w[1..1] & (! w_data564w[1..1])), (w_anode679w[0..0] & (! w_data564w[0..0])), w_anode669w[2..2]);
	w_anode690w[] = ( (w_anode690w[2..2] & (! w_data564w[2..2])), (w_anode690w[1..1] & (! w_data564w[1..1])), (w_anode690w[0..0] & w_data564w[0..0]), w_anode669w[2..2]);
	w_anode700w[] = ( (w_anode700w[2..2] & (! w_data564w[2..2])), (w_anode700w[1..1] & w_data564w[1..1]), (w_anode700w[0..0] & (! w_data564w[0..0])), w_anode669w[2..2]);
	w_anode710w[] = ( (w_anode710w[2..2] & (! w_data564w[2..2])), (w_anode710w[1..1] & w_data564w[1..1]), (w_anode710w[0..0] & w_data564w[0..0]), w_anode669w[2..2]);
	w_anode720w[] = ( (w_anode720w[2..2] & w_data564w[2..2]), (w_anode720w[1..1] & (! w_data564w[1..1])), (w_anode720w[0..0] & (! w_data564w[0..0])), w_anode669w[2..2]);
	w_anode730w[] = ( (w_anode730w[2..2] & w_data564w[2..2]), (w_anode730w[1..1] & (! w_data564w[1..1])), (w_anode730w[0..0] & w_data564w[0..0]), w_anode669w[2..2]);
	w_anode740w[] = ( (w_anode740w[2..2] & w_data564w[2..2]), (w_anode740w[1..1] & w_data564w[1..1]), (w_anode740w[0..0] & (! w_data564w[0..0])), w_anode669w[2..2]);
	w_anode750w[] = ( (w_anode750w[2..2] & w_data564w[2..2]), (w_anode750w[1..1] & w_data564w[1..1]), (w_anode750w[0..0] & w_data564w[0..0]), w_anode669w[2..2]);
	w_anode761w[] = ( (w_anode761w[1..1] & data_wire[4..4]), (w_anode761w[0..0] & (! data_wire[3..3])), B"1");
	w_anode771w[] = ( (w_anode771w[2..2] & (! w_data564w[2..2])), (w_anode771w[1..1] & (! w_data564w[1..1])), (w_anode771w[0..0] & (! w_data564w[0..0])), w_anode761w[2..2]);
	w_anode782w[] = ( (w_anode782w[2..2] & (! w_data564w[2..2])), (w_anode782w[1..1] & (! w_data564w[1..1])), (w_anode782w[0..0] & w_data564w[0..0]), w_anode761w[2..2]);
	w_anode792w[] = ( (w_anode792w[2..2] & (! w_data564w[2..2])), (w_anode792w[1..1] & w_data564w[1..1]), (w_anode792w[0..0] & (! w_data564w[0..0])), w_anode761w[2..2]);
	w_anode802w[] = ( (w_anode802w[2..2] & (! w_data564w[2..2])), (w_anode802w[1..1] & w_data564w[1..1]), (w_anode802w[0..0] & w_data564w[0..0]), w_anode761w[2..2]);
	w_anode812w[] = ( (w_anode812w[2..2] & w_data564w[2..2]), (w_anode812w[1..1] & (! w_data564w[1..1])), (w_anode812w[0..0] & (! w_data564w[0..0])), w_anode761w[2..2]);
	w_anode822w[] = ( (w_anode822w[2..2] & w_data564w[2..2]), (w_anode822w[1..1] & (! w_data564w[1..1])), (w_anode822w[0..0] & w_data564w[0..0]), w_anode761w[2..2]);
	w_anode832w[] = ( (w_anode832w[2..2] & w_data564w[2..2]), (w_anode832w[1..1] & w_data564w[1..1]), (w_anode832w[0..0] & (! w_data564w[0..0])), w_anode761w[2..2]);
	w_anode842w[] = ( (w_anode842w[2..2] & w_data564w[2..2]), (w_anode842w[1..1] & w_data564w[1..1]), (w_anode842w[0..0] & w_data564w[0..0]), w_anode761w[2..2]);
	w_anode853w[] = ( (w_anode853w[1..1] & data_wire[4..4]), (w_anode853w[0..0] & data_wire[3..3]), B"1");
	w_anode863w[] = ( (w_anode863w[2..2] & (! w_data564w[2..2])), (w_anode863w[1..1] & (! w_data564w[1..1])), (w_anode863w[0..0] & (! w_data564w[0..0])), w_anode853w[2..2]);
	w_anode874w[] = ( (w_anode874w[2..2] & (! w_data564w[2..2])), (w_anode874w[1..1] & (! w_data564w[1..1])), (w_anode874w[0..0] & w_data564w[0..0]), w_anode853w[2..2]);
	w_anode884w[] = ( (w_anode884w[2..2] & (! w_data564w[2..2])), (w_anode884w[1..1] & w_data564w[1..1]), (w_anode884w[0..0] & (! w_data564w[0..0])), w_anode853w[2..2]);
	w_anode894w[] = ( (w_anode894w[2..2] & (! w_data564w[2..2])), (w_anode894w[1..1] & w_data564w[1..1]), (w_anode894w[0..0] & w_data564w[0..0]), w_anode853w[2..2]);
	w_anode904w[] = ( (w_anode904w[2..2] & w_data564w[2..2]), (w_anode904w[1..1] & (! w_data564w[1..1])), (w_anode904w[0..0] & (! w_data564w[0..0])), w_anode853w[2..2]);
	w_anode914w[] = ( (w_anode914w[2..2] & w_data564w[2..2]), (w_anode914w[1..1] & (! w_data564w[1..1])), (w_anode914w[0..0] & w_data564w[0..0]), w_anode853w[2..2]);
	w_anode924w[] = ( (w_anode924w[2..2] & w_data564w[2..2]), (w_anode924w[1..1] & w_data564w[1..1]), (w_anode924w[0..0] & (! w_data564w[0..0])), w_anode853w[2..2]);
	w_anode934w[] = ( (w_anode934w[2..2] & w_data564w[2..2]), (w_anode934w[1..1] & w_data564w[1..1]), (w_anode934w[0..0] & w_data564w[0..0]), w_anode853w[2..2]);
	w_data564w[2..0] = data_wire[2..0];
END;
--VALID FILE
